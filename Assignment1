class Passenger:
    def __init__(self, name, contact_details, passport_number, loyalty_status=None):
        # Constructor to initialize Passenger attributes
        self._name = name
        self._contact_details = contact_details
        self._passport_number = passport_number
        self._loyalty_status = loyalty_status

    def get_name(self): # Getter method to retrieve passenger name
        return self._name

    def set_name(self, name): # Setter method to update passenger name
        self._name = name

    def get_contact_details(self):
        # Getter method to retrieve contact details
        return self._contact_details

    def set_contact_details(self, contact_details):
        # Setter method to update contact details
        self._contact_details = contact_details

    def get_passport_number(self):
        # Getter method to retrieve passport number
        return self._passport_number

    def set_passport_number(self, passport_number):
        # Setter method to update passport number
        self._passport_number = passport_number

    def get_loyalty_status(self):
        # Getter method to retrieve loyalty status
        return self._loyalty_status

    def set_loyalty_status(self, loyalty_status):
        # Setter method to update loyalty status
        self._loyalty_status = loyalty_status

    def get_info(self):
        # Method to generate and return passenger information
        info = f"**Passenger Information:**\n"
        info += f"- Name: {self._name}\n"
        info += f"- Contact Details: {self._contact_details}\n"
        info += f"- Passport Number: {self._passport_number}\n"
        if self._loyalty_status:
            info += f"- Loyalty Status: {self._loyalty_status}\n"
        return info


class Flight:
    def __init__(self, airline_name, aircraft_type, flight_number, origin, destination, departure_time, arrival_time, origin_code, destination_code):
        # Constructor to initialize Flight attributes
        self._airline_name = airline_name
        self._aircraft_type = aircraft_type
        self._flight_number = flight_number
        self._origin = origin
        self._destination = destination
        self._departure_time = departure_time
        self._arrival_time = arrival_time
        self._origin_code = origin_code
        self._destination_code = destination_code

    def get_airline_name(self):
        # Getter method to retrieve airline name
        return self._airline_name

    def set_airline_name(self, airline_name):
        # Setter method to update airline name
        self._airline_name = airline_name

    def get_aircraft_type(self):
        # Getter method to retrieve aircraft type
        return self._aircraft_type

    def set_aircraft_type(self, aircraft_type):
        # Setter method to update aircraft type
        self._aircraft_type = aircraft_type

    def get_flight_number(self):
        # Getter method to retrieve flight number
        return self._flight_number

    def set_flight_number(self, flight_number):
        # Setter method to update flight number
        self._flight_number = flight_number

    def get_origin(self):
        # Getter method to retrieve origin
        return self._origin

    def set_origin(self, origin):
        # Setter method to update origin
        self._origin = origin

    def get_destination(self):
        # Getter method to retrieve destination
        return self._destination

    def set_destination(self, destination):
        # Setter method to update destination
        self._destination = destination

    def get_departure_time(self):
        # Getter method to retrieve departure time
        return self._departure_time

    def set_departure_time(self, departure_time):
        # Setter method to update departure time
        self._departure_time = departure_time

    def get_arrival_time(self):
        # Getter method to retrieve arrival time
        return self._arrival_time

    def set_arrival_time(self, arrival_time):
        # Setter method to update arrival time
        self._arrival_time = arrival_time

    def get_info(self):
        # Method to generate and return flight information
        info = f"**Flight Information:**\n"
        info += f"- Airline: {self._airline_name}\n"
        info += f"- Aircraft Type: {self._aircraft_type}\n"
        info += f"- Flight Number: {self._flight_number}\n"
        info += f"- Origin: {self._origin} ({self._origin_code})\n"
        info += f"- Destination: {self._destination} ({self._destination_code})\n"
        info += f"- Departure Time: {self._departure_time}\n"
        info += f"- Arrival Time: {self._arrival_time}\n"
        return info


class BoardingPass:
    def __init__(self, passenger, flight, seat_number, gate):
        # Constructor to initialize BoardingPass attributes
        self._passenger = passenger
        self._flight = flight
        self._seat_number = seat_number
        self._gate = gate
        self._barcode = None

    def generate_barcode(self):
        # Placeholder logic to generate a barcode (using a simple string for illustration)
        self._barcode = "1234567890"

    def print_boarding_pass(self):
        # Placeholder logic to implement printing (can be updated with actual logic)
        print("===================================")
        print("           Boarding Pass           ")
        print("===================================")
        print(f"Passenger: {self._passenger.get_name()}")
        print(self._passenger.get_info())
        print(f"\nFlight: {self._flight.get_flight_number()}")
        print(self._flight.get_info())
        print(f"\nSeat Number: {self._seat_number}")
        print(f"Gate: {self._gate}")
        print(f"\nBarcode: {self._barcode}")
        print("===================================")

    def get_info(self):
        # Method to generate and return boarding pass information
        info = f"========= Boarding Pass Information ===========\n"
        info += self._passenger.get_info()
        info += self._flight.get_info()
        info += f"- Seat Number: {self._seat_number}\n"
        info += f"- Gate: {self._gate}\n"
        return info


def main():
    # Create passenger, flight, and boarding pass objects with data
    passenger = Passenger("James Smith", "JamesSmith@hotmail.com", "123456789", "Gold - First Class")
    flight = Flight("National Airlines", "Boeing 737", "NA4321", "CHICAGO ORD (ORD)", "NEW YORK JFK (JFK)", "06 DEC 20 11:40", "13:30", "ORD", "JFK")
    boarding_pass = BoardingPass(passenger, flight, "09A", "03")

    # Generate and print boarding pass
    boarding_pass.generate_barcode()  # Replace with actual barcode generation logic
    boarding_pass.print_boarding_pass()


if __name__ == "__main__":
    main()

